<?php

namespace App\Http\Controllers;

use App\Services\CheckoutService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class CheckoutController extends Controller
{
    protected $checkoutService;

    public function __construct(CheckoutService $checkoutService)
    {
        $this->checkoutService = $checkoutService;
    }

    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        $cartItems = $this->checkoutService->getCartItemsForCheckout();
        return view('user.checkout', compact('cartItems'));
    }

    public function store(Request $request)
    {
        $data = $request->validate([
            'payment_method' => 'required|string', // Token generated by Stripe.js
            'total' => 'required|numeric',
        ]);

        DB::beginTransaction();

        /* try {
            // Process payment
            $charge = $this->paymentService->processPayment(
                $data['total'],
                'usd', // currency
                $data['payment_method'],
                auth()->user()->email
            );

            // If payment is successful, create the order
            $order = $this->checkoutService->processCheckout([
                'user_id' => auth()->id(),
                'total' => $data['total'],
            ]);

            DB::commit();

            return redirect()->route('orders.index')->with('success', 'Order placed successfully!');
        } catch (\Exception $e) {
            DB::rollBack();
            return redirect()->route('checkout.index')->with('error', 'Payment failed: ' . $e->getMessage());
        } */
    }
}
